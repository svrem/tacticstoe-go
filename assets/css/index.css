:root {
  --player-color: 239, 50%, 40%;
  --opponent-color: 0, 50%, 40%;

  --winner-color: 120, 50%, 40%;
  --loser-color: 0, 50%, 40%;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* gap: 2rem; */
  padding: 1.2rem;
  width: 100%;
}

.game-container {
  --border-color: 0, 0%, 0%;

  position: relative;
  display: grid;

  width: 500px;
  max-width: 100%;

  margin-left: auto;
  margin-right: auto;

  & > .game-board {
    width: 100%;
    aspect-ratio: 1;

    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;

    border: 5px solid hsl(var(--border-color));

    border-radius: 1rem;
    overflow: hidden;

    color: black;

    transition: border-color 0.2s;
  }

  &[data-player-turn="true"] {
    --border-color: var(--player-color);
  }

  &[data-player-turn="false"] {
    --border-color: var(--opponent-color);
  }

  &[data-player-winner="true"] {
    --border-color: var(--winner-color);
  }

  &[data-player-winner="false"] {
    --border-color: var(--loser-color);
  }

  &[data-loading="true"] {
    & > .game-board {
      animation: pulse 3.5s infinite;
    }
  }

  .cell:hover,
  .cell:focus {
    background-color: hsl(10, 0%, 85%);
    outline: none;
  }

  .cell[data-state] {
    background-color: hsl(240, 0%, 92%);
  }

  .cell[data-winner="true"] {
    background-color: hsla(var(--winner-color), 0.5);

    & > * {
      animation: quickBounce 0.5s;
    }
  }

  .cell[data-winner="false"] {
    background-color: hsla(var(--loser-color), 0.5);

    & > * {
      animation: quickBounce 0.5s cubic-bezier(0.93, 0.66, 0.37, 1);
    }
  }

  .cell {
    background-color: hsl(240, 0%, 92%);
    border: 1px solid hsl(var(--border-color));
    transition: border-color 0.2s;
    padding: 0.5rem;
  }
}

.header {
  position: relative;

  width: 100%;
  padding: 1rem;

  & > h1 {
    width: fit-content;
    height: fit-content;

    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
  }

  .profile-picture {
    width: 3rem;
    aspect-ratio: 1;

    border-radius: 9999999px;
    object-fit: cover;

    margin: auto auto;
    margin-right: 0;
    top: 0;
    bottom: 0;

    display: block;
  }
}

footer {
  position: absolute;

  bottom: 0;

  padding: 1rem;
}

.play-buttons {
  display: flex;
  /* grid-template-columns: 1fr 1fr; */
  width: 500px;
  max-width: 100%;
  gap: 1rem;
  padding: 0 0.1rem;

  & > button {
    flex-grow: 1;
    padding: 1rem;
    border: none;
    border-radius: 0.5rem;
    color: white;
    font-size: 1.2rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  & > .bot {
    background-color: hsl(0, 0%, 45%);
    box-shadow: 0 4px 0 hsl(0, 0%, 30%);
  }

  & > .bot:hover {
    box-shadow: 0 6px 0 hsl(0, 0%, 30%);
    transform: translateY(-2px);
  }

  & > .bot:active {
    box-shadow: 0 2px 0 hsl(0, 0%, 30%);
    transform: translateY(2px);
  }
  & > .single-player {
    background-color: hsl(0, 0%, 45%);
    box-shadow: 0 4px 0 hsl(0, 0%, 30%);
  }

  & > .single-player:hover {
    box-shadow: 0 6px 0 hsl(0, 0%, 30%);
    transform: translateY(-2px);
  }

  & > .single-player:active {
    box-shadow: 0 2px 0 hsl(0, 0%, 30%);
    transform: translateY(2px);
  }
  & > .online {
    background-color: hsl(202, 77%, 45%);
    box-shadow: 0 4px 0 hsl(202, 77%, 30%);
  }

  & > .online:hover {
    box-shadow: 0 6px 0 hsl(202, 77%, 30%);
    transform: translateY(-2px);
  }

  & > .online:active {
    box-shadow: 0 2px 0 hsl(202, 77%, 30%);
    transform: translateY(2px);
  }

  & > .tutorial-button {
    background-color: hsl(202, 77%, 20%);
    box-shadow: 0 4px 0 hsl(202, 77%, 10%);

    padding: 0;
    width: fit-content;
    flex-grow: 0;
    aspect-ratio: 1;
    flex-shrink: 0;

    transform: scaleX(1.02);
  }
}

.game-end-message-container {
  width: 20rem;
  max-width: 100%;

  border-radius: 0.5rem;
  overflow: hidden;

  background-color: white;

  box-shadow: hsla(0, 0%, 0%, 0.2) 0px 8px 24px;
  color: black;

  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  transition: opacity, transform 0.5s;

  &.hidden {
    transform: translate(-50%, -50%);
    opacity: 1;
    animation: slideOutTop 0.3s forwards;
  }

  &.visible {
    opacity: 0;
    transform: translate(-50%, -60%);
    animation: slideInTop 0.3s forwards;
    animation-delay: 1.2s;
  }

  & > .top {
    background-color: hsl(0, 0%, 97%);
    padding: 0.75rem;
    position: relative;

    & > h2 {
      text-align: center;
      font-weight: 700;
    }

    & > button {
      position: absolute;
      right: 0.5rem;
      top: 0.5rem;
      border: none;
      background-color: hsl(0, 0%, 97%);
      cursor: pointer;
      transition: background-color 0.2s;
    }
  }

  & > p {
    padding: 1rem;
    text-align: center;
  }

  & > .bottom {
    display: grid;
    /* padding-x: 0.5rem */
    gap: 0.5rem;
    /* grid-template-columns: 1fr 1fr; */
    padding: 0.5rem;

    & > button {
      border-radius: 0.2rem;
      padding: 0.75rem;
      border: none;
      background-color: hsl(0, 0%, 45%);
      color: white;
      font-weight: 700;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    & > button:hover {
      background-color: hsl(0, 0%, 30%);
    }
  }
}

.player-info {
  height: 3rem;

  margin-top: 1rem;
  margin-bottom: 1rem;

  display: flex;
  gap: 1rem;

  & > img {
    height: 100%;
    aspect-ratio: 1;
  }

  & > div {
    display: grid;
    grid-template-rows: 1fr 1fr;
  }
}

@keyframes slideOutTop {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -60%);
  }
}

@keyframes slideInTop {
  0% {
    opacity: 0;
    transform: translate(-50%, -60%);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

@keyframes quickBounce {
  0% {
    transform: scale(1) translateY(0);
  }
  50% {
    transform: scale(1.1) translateY(-10px);
  }
  100% {
    transform: scale(1) translateY(0);
  }
}

@keyframes pulse {
  0% {
    transform: translateY(0);
    box-shadow: 0 0 0 0 hsla(0, 0%, 0%, 0);
  }
  50% {
    transform: translateY(-5px);
    box-shadow: 0 8px 10px 0 hsla(0, 0%, 0%, 0.2);
  }
  100% {
    transform: translateY(0);
    box-shadow: 0 0 0 0 hsla(0, 0%, 0%, 0);
  }
}
